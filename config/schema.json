{
  "format_version": "1.0",
  "provider_schemas": {
    "registry.terraform.io/fluxcd/flux": {
      "provider": {
        "version": 0,
        "block": {
          "attributes": {
            "client_certificate": {
              "type": "string",
              "description": "PEM-encoded client certificate for TLS authentication.",
              "description_kind": "plain",
              "optional": true
            },
            "client_key": {
              "type": "string",
              "description": "PEM-encoded client certificate key for TLS authentication.",
              "description_kind": "plain",
              "optional": true
            },
            "cluster_ca_certificate": {
              "type": "string",
              "description": "PEM-encoded root certificates bundle for TLS authentication.",
              "description_kind": "plain",
              "optional": true
            },
            "config_context": {
              "type": "string",
              "description_kind": "plain",
              "optional": true
            },
            "config_context_auth_info": {
              "type": "string",
              "description_kind": "plain",
              "optional": true
            },
            "config_context_cluster": {
              "type": "string",
              "description_kind": "plain",
              "optional": true
            },
            "config_path": {
              "type": "string",
              "description": "Path to the kube config file. Can be set with KUBE_CONFIG_PATH.",
              "description_kind": "plain",
              "optional": true
            },
            "config_paths": {
              "type": [
                "set",
                "string"
              ],
              "description": "A list of paths to kube config files. Can be set with KUBE_CONFIG_PATHS environment variable.",
              "description_kind": "plain",
              "optional": true
            },
            "host": {
              "type": "string",
              "description": "The hostname (in form of URI) of Kubernetes master.",
              "description_kind": "plain",
              "optional": true
            },
            "insecure": {
              "type": "bool",
              "description": "Whether server should be accessed without verifying the TLS certificate.",
              "description_kind": "plain",
              "optional": true
            },
            "password": {
              "type": "string",
              "description": "The password to use for HTTP basic authentication when accessing the Kubernetes master endpoint.",
              "description_kind": "plain",
              "optional": true
            },
            "proxy_url": {
              "type": "string",
              "description": "URL to the proxy to be used for all API requests",
              "description_kind": "plain",
              "optional": true
            },
            "token": {
              "type": "string",
              "description": "Token to authenticate an service account",
              "description_kind": "plain",
              "optional": true
            },
            "username": {
              "type": "string",
              "description": "The username to use for HTTP basic authentication when accessing the Kubernetes master endpoint.",
              "description_kind": "plain",
              "optional": true
            }
          },
          "description_kind": "plain"
        }
      },
      "resource_schemas": {
        "flux_bootstrap_git": {
          "version": 0,
          "block": {
            "attributes": {
              "author_email": {
                "type": "string",
                "description": "Author email for Git commits.",
                "description_kind": "plain",
                "optional": true
              },
              "author_name": {
                "type": "string",
                "description": "Author name for Git commits.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "branch": {
                "type": "string",
                "description": "Branch in repository to reconcile from.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "cluster_domain": {
                "type": "string",
                "description": "The internal cluster domain.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "commit_message_appendix": {
                "type": "string",
                "description": "String to add to the commit messages.",
                "description_kind": "plain",
                "optional": true
              },
              "components": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Toolkit components to include in the install manifests.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "components_extra": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of extra components to include in the install manifests.",
                "description_kind": "plain",
                "optional": true
              },
              "gpg_key_id": {
                "type": "string",
                "description": "Key id for selecting a particular key.",
                "description_kind": "plain",
                "optional": true
              },
              "gpg_key_ring": {
                "type": "string",
                "description": "GPG key ring for signing commits.",
                "description_kind": "plain",
                "optional": true
              },
              "gpg_passphrase": {
                "type": "string",
                "description": "Passphrase for decrypting GPG private key.",
                "description_kind": "plain",
                "optional": true,
                "sensitive": true
              },
              "http": {
                "nested_type": {
                  "attributes": {
                    "allow_insecure_http": {
                      "type": "bool",
                      "description": "Allows http Git url connections.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "certificate_authority": {
                      "type": "string",
                      "description": "Certificate authority to validate self-signed certificates.",
                      "description_kind": "plain",
                      "optional": true
                    },
                    "password": {
                      "type": "string",
                      "description": "Password for basic authentication.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "username": {
                      "type": "string",
                      "description": "Username for basic authentication.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "computed": true
              },
              "image_pull_secret": {
                "type": "string",
                "description": "Kubernetes secret name used for pulling the toolkit images from a private registry.",
                "description_kind": "plain",
                "optional": true
              },
              "interval": {
                "type": "string",
                "description": "Interval at which to reconcile from bootstrap repository.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "kustomization_override": {
                "type": "string",
                "description": "Kustomization to override configuration set by default.",
                "description_kind": "plain",
                "optional": true
              },
              "log_level": {
                "type": "string",
                "description": "Log level for toolkit components.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "namespace": {
                "type": "string",
                "description": "The namespace scope for install manifests.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "network_policy": {
                "type": "bool",
                "description": "Deny ingress access to the toolkit controllers from other namespaces using network policies.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "path": {
                "type": "string",
                "description": "Path relative to the repository root, when specified the cluster sync will be scoped to this path.",
                "description_kind": "plain",
                "optional": true
              },
              "recurse_submodules": {
                "type": "bool",
                "description": "Configures the GitRepository source to initialize and include Git submodules in the artifact it produces.",
                "description_kind": "plain",
                "optional": true
              },
              "registry": {
                "type": "string",
                "description": "Container registry where the toolkit images are published.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "repository_files": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Git repository files created and managed by the provider.",
                "description_kind": "plain",
                "computed": true
              },
              "secret_name": {
                "type": "string",
                "description": "Name of the secret the sync credentials can be found in or stored to.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "ssh": {
                "nested_type": {
                  "attributes": {
                    "password": {
                      "type": "string",
                      "description": "Password for private key.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "private_key": {
                      "type": "string",
                      "description": "Private key used for authenticating to the Git SSH server.",
                      "description_kind": "plain",
                      "optional": true,
                      "sensitive": true
                    },
                    "username": {
                      "type": "string",
                      "description": "Username for Git SSH server.",
                      "description_kind": "plain",
                      "optional": true
                    }
                  },
                  "nesting_mode": "single"
                },
                "description_kind": "plain",
                "optional": true
              },
              "toleration_keys": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of toleration keys used to schedule the components pods onto nodes with matching taints.",
                "description_kind": "plain",
                "optional": true
              },
              "url": {
                "type": "string",
                "description": "Url of git repository to bootstrap from.",
                "description_kind": "plain",
                "required": true
              },
              "version": {
                "type": "string",
                "description": "Flux version.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "watch_all_namespaces": {
                "type": "bool",
                "description": "If true watch for custom resources in all namespaces.",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              }
            },
            "description": "Commits Flux components to a Git repository and configures a Kubernetes cluster to synchronize with the same Git repository.",
            "description_kind": "markdown"
          }
        }
      },
      "data_source_schemas": {
        "flux_install": {
          "version": 0,
          "block": {
            "attributes": {
              "baseurl": {
                "type": "string",
                "description": "Base URL to get the install manifests from. When specifying this, `version` should also be set to the corresponding version to download from that URL, or the latest version associated with upstream flux will be requested. Defaults to `https://github.com/fluxcd/flux2/releases`.",
                "description_kind": "plain",
                "optional": true
              },
              "cluster_domain": {
                "type": "string",
                "description": "The internal cluster domain. Defaults to `cluster.local`.",
                "description_kind": "plain",
                "optional": true
              },
              "components": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "Toolkit components to include in the install manifests.",
                "description_kind": "plain",
                "optional": true
              },
              "components_extra": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of extra components to include in the install manifests.",
                "description_kind": "plain",
                "optional": true
              },
              "content": {
                "type": "string",
                "description": "Manifests in multi-doc yaml format.",
                "description_kind": "plain",
                "computed": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "image_pull_secrets": {
                "type": "string",
                "description": "Kubernetes secret name used for pulling the toolkit images from a private registry. Defaults to ``.",
                "description_kind": "plain",
                "optional": true
              },
              "log_level": {
                "type": "string",
                "description": "Log level for toolkit components. Defaults to `info`.",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "The namespace scope for install manifests. Defaults to `flux-system`.",
                "description_kind": "plain",
                "optional": true
              },
              "network_policy": {
                "type": "bool",
                "description": "Deny ingress access to the toolkit controllers from other namespaces using network policies. Defaults to `true`.",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Expected path of content in git repository.",
                "description_kind": "plain",
                "computed": true
              },
              "registry": {
                "type": "string",
                "description": "Container registry where the toolkit images are published. Defaults to `ghcr.io/fluxcd`.",
                "description_kind": "plain",
                "optional": true
              },
              "target_path": {
                "type": "string",
                "description": "Relative path to the Git repository root where Flux manifests are committed.",
                "description_kind": "plain",
                "required": true
              },
              "toleration_keys": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "List of toleration keys used to schedule the components pods onto nodes with matching taints.",
                "description_kind": "plain",
                "optional": true
              },
              "version": {
                "type": "string",
                "description": "Flux version. Defaults to `v0.39.0`.",
                "description_kind": "plain",
                "optional": true
              },
              "watch_all_namespaces": {
                "type": "bool",
                "description": "If true watch for custom resources in all namespaces. Defaults to `true`.",
                "description_kind": "plain",
                "optional": true
              }
            },
            "description": "`flux_install` can be used to generate Kubernetes manifests for deploying Flux.",
            "description_kind": "plain"
          }
        },
        "flux_sync": {
          "version": 0,
          "block": {
            "attributes": {
              "branch": {
                "type": "string",
                "description": "Default branch to sync from. Defaults to `main`.",
                "description_kind": "plain",
                "optional": true
              },
              "commit": {
                "type": "string",
                "description": "The Git commit SHA to checkout, if specified Tag filters will be ignored.",
                "description_kind": "plain",
                "optional": true
              },
              "content": {
                "type": "string",
                "description": "Manifests in multi-doc yaml format.",
                "description_kind": "plain",
                "computed": true
              },
              "git_implementation": {
                "type": "string",
                "description": "The git implementation to use, can be `go-git` or `libgit2`. Defaults to ``.",
                "description_kind": "plain",
                "optional": true
              },
              "id": {
                "type": "string",
                "description_kind": "plain",
                "optional": true,
                "computed": true
              },
              "interval": {
                "type": "number",
                "description": "Sync interval in minutes. Defaults to `1`.",
                "description_kind": "plain",
                "optional": true
              },
              "kustomize_content": {
                "type": "string",
                "description": "Kustomize yaml document.",
                "description_kind": "plain",
                "computed": true
              },
              "kustomize_path": {
                "type": "string",
                "description": "Expected path of kustomize content in git repository.",
                "description_kind": "plain",
                "computed": true
              },
              "name": {
                "type": "string",
                "description": "The kubernetes resources name Defaults to `flux-system`.",
                "description_kind": "plain",
                "optional": true
              },
              "namespace": {
                "type": "string",
                "description": "The namespace scope for this operation. Defaults to `flux-system`.",
                "description_kind": "plain",
                "optional": true
              },
              "patch_file_paths": {
                "type": [
                  "map",
                  "string"
                ],
                "description": "Map of expected paths of kustomize patches in git repository, keyed by the `patch_names` input variable.",
                "description_kind": "plain",
                "computed": true
              },
              "patch_names": {
                "type": [
                  "set",
                  "string"
                ],
                "description": "The names of patches to apply to the Kustomization. Used to generate the `patch_file_paths` output value.",
                "description_kind": "plain",
                "optional": true
              },
              "path": {
                "type": "string",
                "description": "Expected path of content in git repository.",
                "description_kind": "plain",
                "computed": true
              },
              "secret": {
                "type": "string",
                "description": "The name of the secret that is referenced by GitRepository as SecretRef. Defaults to `flux-system`.",
                "description_kind": "plain",
                "optional": true
              },
              "semver": {
                "type": "string",
                "description": "The Git tag semver expression, takes precedence over `tag`.",
                "description_kind": "plain",
                "optional": true
              },
              "tag": {
                "type": "string",
                "description": "The Git tag to checkout, takes precedence over `branch`.",
                "description_kind": "plain",
                "optional": true
              },
              "target_path": {
                "type": "string",
                "description": "Relative path to the Git repository root where the sync manifests are committed.",
                "description_kind": "plain",
                "required": true
              },
              "url": {
                "type": "string",
                "description": "Git repository clone url.",
                "description_kind": "plain",
                "required": true
              }
            },
            "description": "`flux_sync` can be used to generate manifests for reconciling the specified repository path on the cluster.",
            "description_kind": "plain"
          }
        }
      }
    }
  }
}
